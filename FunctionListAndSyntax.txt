void RegisterStringVariable(const char *varName, const char *value)
void RegisterNumericVariable(const char *varName, double value)

char *ConfigfileGetKeyName(const char *filename, const char *section, int index)
char *ConfigfileGetSectionName(const char *filename, int index)
bool ConfigfileDeleteKey(const char *filename, const char *section, const char *key)
bool ConfigfileDeleteSection(const char *filename, const char *section)
bool ConfigfileReadBool(const char *filename, const char *section, const char *key, bool defaultValue)
int ConfigfileReadInt(const char *filename, const char *section, const char *key, int defaultValue)
float ConfigfileReadSingle(const char *filename, const char *section, const char *key, float defaultValue)
char *ConfigfileReadString(const char *filename, const char *section, const char *key, const char *defaultValue)
bool ConfigfileWriteBool(const char *filename, const char *section, const char *key, bool value)
bool ConfigfileWriteInt(const char *filename, const char *section, const char *key, int value)
bool ConfigfileWriteSingle(const char *filename, const char *section, const char *key, float value)
bool ConfigfileWriteString(const char *filename, const char *section, const char *key, const char *value)

void LogWrite(const char *message, uint8_t level, uint8_t messageType)
void LogWrite_s(const char *message, uint8_t level, uint8_t messageType, const char *argument)
void LogWrite_i(const char *message, uint8_t level, uint8_t messageType, int32_t argument)
void LogWrite_d(const char *message, uint8_t level, uint8_t messageType, double argument)

void ShowSimpleMessageBox(uint8_t type, const char *title, const char *message)
bool ShowYesNoMessageBox(const char *title, const char *message)
bool ShowOkCancelMessageBox(const char *title, const char *message)
const char *ShowInputDialog(const char *title, const char *message, const char *defaultInput)
const char *ShowPasswordDialog(const char *title, const char *message)
const char *ShowSaveFileDialog(const char *title, const char *defaultPathAndFile, int fpNum, const char **filterPatterns, const char *singleFilterDescription)
const char *ShowOpenFileDialog(const char *title, const char *defaultPathAndFile, int fpNum, const char **filterPatterns, const char *singleFilterDescription)
const char *ShowSelectFolderDialog(const char *title, const char *defaultPath)

void Notify(const char *message, uint8_t level, uint8_t messageType)

void FileWriteLine(const char* filename, const char *text, uint8_t mode)

bool ClipboardPutText(const char* text)
const char *ClipboardGetText()

bool ScreenInit(int width, int height)
void ScreenQuit()
void ScreenFlip()

bool TextureInit(uint32_t dmSize, uint32_t reservedCount)
void TextureBeginTarget(uint32_t texNum)
void TextureEndTarget(void)
int TextureGetWidth(uint32_t texNum)
int TextureGetHeight(uint32_t texNum)
int, int TextureGetSizes(uint32_t texNum)
uint32_t TextureCreate(const char *name, int widthm int height)
uint32_t TextureLoad(const char *filename)
void TextureFree(uint32_t texNum)
void TextureBlit_f(uint32_t texNum, float x, float y)
void TextureBlitRegion_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh)
void TextureBlitRegionScaled_f(uint32_t texNum, float x, float y, float w, float h, float rx, float ry, float rw, float rh)
void TextureBlitRegionAngled_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float angle, float pivotX, float pivotY)
void TextureBlitRegionFlipped_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, int flip)
void TextureBlitRegionGeneral_f(uint32_t texNum, float x, float y, float w, float h, float rx, float ry, float rw, float rh, float angle, float pivotX, float pivotY, int flip)

bool TtfInit(uint32_t dmSize, uint32_t reservedCount)
void TtfQuit()
uint32_t TtfLoad(const char *filename, int size)
void TtfFree(uint32_t fontNum)
int TtfGetFontHeight(uint32_t fontNum)
int, int TtfGetStringSizes(uint32_t fontNum, const char *string)
int TtfGetStringWidth(uint32_t fontNum, const char *string)
void TtfSetFontStyle(uint32_t fontNum, int style)
void TtfSetFontOutline(uint32_t fontNum, int outline)

bool PrimitiveInit()
void PrimitiveFill_rgb(uint8_t r, uint8_t g, uint8_t b)
void PrimitiveFill_rgba(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveFill_c(uint32_t color)
void PrimitiveFill_ca(uint32_t color)
void PrimitivePixel_rgb_f(float x, float y, uint8_t r, uint8_t g, uint8_t b)
void PrimitivePixel_rgba_f(float x, float y, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitivePixel_c_f(float x, float y, uint32_t color)
void PrimitivePixel_ca_f(float x, float y, uint32_t color)
void PrimitiveLine_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveLine_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveLine_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveLine_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveArc_rgb_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveArc_rgba_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveArc_c_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveArc_ca_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveSegmentFilled_rgb_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveSegmentFilled_rgba_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveSegmentFilled_c_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveSegmentFilled_ca_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveCircle_rgb_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveCircle_rgba_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveCircle_c_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircle_ca_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircleFilled_rgb_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveCircleFilled_rgba_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveCircleFilled_c_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircleFilled_ca_f(float x, float y, float radius, uint32_t color)
void PrimitiveEllipse_rgb_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveEllipse_rgba_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveEllipse_c_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipse_ca_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipseFilled_rgb_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveEllipseFilled_rgba_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveEllipseFilled_c_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipseFilled_ca_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveRingSegment_rgb_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRingSegment_rgba_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRingSegment_c_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegment_ca_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegmentFilled_rgb_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRingSegmentFilled_rgba_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRingSegmentFilled_c_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegmentFilled_ca_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveTriangle_rgb_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveTriangle_rgba_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveTriangle_c_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangle_ca_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangleFilled_rgb_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveTriangleFilled_rgba_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveTriangleFilled_c_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangleFilled_ca_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveRectangle_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRectangle_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRectangle_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangle_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangleFilled_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRectangleFilled_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRectangleFilled_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangleFilled_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRoundedRectangle_rgb_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRoundedRectangle_rgba_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRoundedRectangle_c_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangle_ca_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangleFilled_rgb_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRoundedRectangleFilled_rgba_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRoundedRectangleFilled_c_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangleFilled_ca_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveLineBegin_f(float x, float y)
void PrimitiveLineTo_rgb_f(float x, float y, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveLineTo_rgba_f(float x, float y, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveLineTo_c_f(float x, float y, uint32_t color)
void PrimitiveLineTo_ca_f(float x, float y, uint32_t color)
void PrimitiveLineEnd()

bool AudioInit(uint32_t sndDmSize, uint32_t sndReservedCount, uint32_t musDmSize, uint32_t musReservedCount, int freq, int channels, int chunkSize)
void AudioQuit()
uint32_t AudioSoundLoad(const char *filename)
uint32_t AudioMusicLoad(const char *filename)
void AudioSoundPlay(uint32_t soundNum)
void AudioSoundFadeInPlay(uint32_t soundNum, int ms)
void AudioSoundSetVolume(uint32_t soundNum, int volume)
void AudioSoundSetVolume_f(uint32_t soundNum, float volume)
void AudioSoundStop(uint32_t soundNum)
void AudioSoundFadeOutStop(uint32_t soundNum, int ms)
void AudioChannelsSetVolume(int volume)
void AudioChannelsSetVolume_f(float volume)
void AudioChannelsPause()
void AudioChannelsResume()
void AudioChannelsStop()
void AudioChannelsFadeOutStop(int ms)
void AudioMusicPlay(uint32_t musicNum)
void AudioMusicFadeInPlay(uint32_t musicNum, int ms)
void AudioMusicSetVolume(int volume)
void AudioMusicSetVolume_f(float volume)
void AudioMusicPause()
void AudioMusicResume()
void AudioMusicStop()
void AudioMusicFadeOutStop(int ms)
void AudioSoundFree(uint32_t soundNum)
void AudioMusicFree(uint32_t musicNum)

bool KeyboardInit()
void KeyboardRefresh()
bool KeyboardPress(int key)
bool KeyboardRelease(int key)
bool KeyboardPressed(int key)

bool MouseInit()
void MouseRefresh()
bool MousePress(int button)
bool MouseRelease(int button)
bool MousePressed(int button)
int MouseGetWheelRelative()
int MouseGetX()
int MouseGetY()
int, int MouseGetXY()
int MouseGetDeltaX()
int MouseGetDeltaY()
int, int MouseGetDeltaXY()

bool GameControllerInit()
void GameControllerQuit()
void GameControllerRefresh()
bool GameControllerButtonPress(int controllerNum, int button)
bool GameControllerButtonRelease(int controllerNum, int button)
bool GameControllerButtonPressed(int controllerNum, int button)
int GameControllerGetAxis(int controllerNum, int axisNum)
float GameControllerGetAxis_f(int controllerNum, int axisNum)
int GameControllerGetAxisDelta(int controllerNum, int axisNum)
float GameControllerGetAxisDelta_f(int controllerNum, int axisNum)
int GameControllerGetTrackballDeltaX(int controllerNum, int trackballNum)
int GameControllerGetTrackballDeltaY(int controllerNum, int trackballNum)
int, int GameControllerGetTrackballDeltaXY(int controllerNum, int trackballNum)
int GameControllerGetPovHat(int controllerNum, int povHatNum)

bool TimerInit()
void TimerStart()
int TimerDelay(int ms)
int TimerDelayForFPS(int fps)
float TimerDelayForFPS_f(float fps)

uint32_t ColorAssembleRGB(uint8_t r, uint8_t g, uint8_t b)
uint32_t ColorAssembleRGBA(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
uint8_t, uint8_t, uint8_t ColorSplitRGB(uint32_t rgb)
uint8_t, uint8_t, uint8_t, uint8_t ColorSplitRGBA(uint32_t rgba)
uint32_t ColorRGBtoRGBA(uint32_t rgb)
uint32_t ColorRGBAtoRGB(uint32_t rgba)

bool SpriteInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t SpriteLoad(const char *filename, int clipWidth, int clipHeight, int rowsCount, int colsCount, int clipsCount, int anchorX, int anchorY)
void SpriteFree(uint32_t sprNum)
void SpriteDraw_f(uint32_t sprNum, int clipNum, float x, float y)
void SpriteDrawScaled_f(uint32_t sprNum, int clipNum, float x, float y, float w, float h)
void SpriteDrawAngled_f(uint32_t sprNum, int clipNum, float x, float y, float angle)
void SpriteDrawFlipped_f(uint32_t sprNum, int clipNum, float x, float y, int flip)
void SpriteDrawGeneral_f(uint32_t sprNum, int clipNum, float x, float y, float w, float h, float angle, int flip)

bool FontInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t FontLoadTtf(const char *filename, int size)
void FontFree(uint32_t fontNum)
void FontSetTtfStyle(uint32_t fontNum, int style)
void FontSetTtfOutline(uint32_t fontNum, int outline)
bool FontRenderTtfString(uint32_t fontNum, uint32_t texNum, uint8_t r, uint8_t g, uint8_t b, const char *string)
uint32_t FontCreateMbf(const char *name, int reservedTables, int width, int height)
bool FontAddMbfTextureTable(uint32_t fontNum, uint32_t texNum, int tableNum)
bool FontDrawMbfString_f(uint32_t fontNum, float x, float y, const char *string)
