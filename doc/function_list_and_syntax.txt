int ScriptsFunctionSupported(const char *functionName)
char *ScriptsGetAutorunPath()
bool ScriptsRegisterVariable_b(const char *varName, bool value)
bool ScriptsRegisterVariable_i(const char *varName, int value)
bool ScriptsRegisterVariable_u(const char *varName, unsigned int value)
bool ScriptsRegisterVariable_f(const char *varName, float value)
bool ScriptsRegisterVariable_d(const char *varName, double value)
bool ScriptsRegisterVariable_s(const char *varName, const char *value)

int MarathonerFunctionSupported(const char *functionName)
uint32_t MarathonerGetVersion()
uint32_t MarathonerGetModuleVersion(const char *moduleID)
char *MarathonerGetSubsystemModuleId(char *subsystem)

char *ConfigfileGetKeyName(const char *filename, const char *section, int index)
char *ConfigfileGetSectionName(const char *filename, int index)
bool ConfigfileKeyExists(const char* filename, const char *section, const char *key)
bool ConfigfileSectionExists(const char* filename, const char *section)
bool ConfigfileDeleteKey(const char *filename, const char *section, const char *key)
bool ConfigfileDeleteSection(const char *filename, const char *section)
bool ConfigfileReadBool(const char *filename, const char *section, const char *key, bool defaultValue)
int ConfigfileReadInt(const char *filename, const char *section, const char *key, int defaultValue)
float ConfigfileReadSingle(const char *filename, const char *section, const char *key, float defaultValue)
char *ConfigfileReadString(const char *filename, const char *section, const char *key, const char *defaultValue)
bool ConfigfileWriteBool(const char *filename, const char *section, const char *key, bool value)
bool ConfigfileWriteInt(const char *filename, const char *section, const char *key, int value)
bool ConfigfileWriteSingle(const char *filename, const char *section, const char *key, float value)
bool ConfigfileWriteString(const char *filename, const char *section, const char *key, const char *value)
bool ConfigfileCreateSection(const char *filename, const char *section)

void LogWrite(const char *message, uint8_t level, uint8_t messageType)
void LogWrite_s(const char *message, uint8_t level, uint8_t messageType, const char *argument)
void LogWrite_i(const char *message, uint8_t level, uint8_t messageType, int32_t argument)
void LogWrite_d(const char *message, uint8_t level, uint8_t messageType, double argument)

void ShowSimpleMessageBox(uint8_t type, const char *title, const char *message)
bool ShowYesNoMessageBox(const char *title, const char *message)
bool ShowOkCancelMessageBox(const char *title, const char *message)
const char *ShowInputDialog(const char *title, const char *message, const char *defaultInput)
const char *ShowPasswordDialog(const char *title, const char *message)
void AddFileFilter(char *filter)
void ClearFileFilters()
const char *ShowSaveFileDialog(const char *title, const char *defaultPathAndFile, const char *singleFilterDescription)
const char *ShowOpenFileDialog(const char *title, const char *defaultPathAndFile, const char *singleFilterDescription)
const char *ShowSelectFolderDialog(const char *title, const char *defaultPath)

void Notify(const char *message, uint8_t level, uint8_t messageType)

uint32_t FileOpen(const char *filename, int mode)
bool FileClose(uint32_t fileNum)
char *, size_t FileRead(uint32_t fileNum)
bool FileWrite(uint32_t fileNum, const char *string)
bool FileWriteLine(uint32_t fileNum, const char *string)
void FileWriteFast(const char* filename, const char *text, uint8_t mode)
void FileWriteLineFast(const char* filename, const char *text, uint8_t mode)

bool ClipboardPutText(const char* text)
const char *ClipboardGetText()

uint32_t StringBufferAdd(const char *initialString, int maxlen)
void StringBufferDelete(uint32_t sbnum)
void StringBufferSetString(uint32_t sbnum, const char *string)
char *StringBufferGetString(uint32_t sbnum)
int StringBufferGetMaxLen(uint32_t sbnum)

bool OptionsAlias(char *option, char *alias)
char *OptionsGet(char *option)
int OptionsGet_b(char *option)
int OptionsGet_i(char *option)
long int OptionsGet_l(char *option)
float OptionsGet_f(char *option)
double OptionsGet_d(char *option)

void ConsoleShow()
void ConsoleHide()

int ScreenFunctionSupported(const char *functionName)
bool ScreenInit(int width, int height, bool fullscreen, const char *title)
void ScreenQuit()
void ScreenFlip()
int, int ScreenGetSizes()
int ScreenGetWidth()
int ScreenGetHeight()
bool ScreenXed()

int TextureFunctionSupported(const char *functionName)
bool TextureInit(uint32_t dmSize, uint32_t reservedCount)
void TextureBeginTarget(uint32_t texNum)
void TextureEndTarget(void)
int TextureGetWidth(uint32_t texNum)
int TextureGetHeight(uint32_t texNum)
int, int TextureGetSizes(uint32_t texNum)
uint32_t TextureCreate(const char *name, int width, int height)
uint32_t TextureLoad(const char *filename)
uint32_t TextureCopy(uint32_t texNum)
bool TextureSave(uint32_t texNum, const char *filename)
void TextureFree(uint32_t texNum)
void TextureSetModulation_c(uint32_t texNum, uint32_t color)
void TextureSetModulation_ca(uint32_t texNum, uint32_t color)
void TextureSetModulation_rgb(uint32_t texNum, uint8_t r, uint8_t g, uint8_t b)
void TextureSetModulation_rgba(uint32_t texNum, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void TextureSetModulationAlpha(uint32_t texNum, uint8_t alpha)
void TextureSetModulationAlpha_f(uint32_t texNum, float alpha)
void TextureBlit_f(uint32_t texNum, float x, float y)
void TextureBlitSized_f(uint32_t texNum, float x, float y, float w, float h)
void TextureBlitScaled_f(uint32_t texNum, float x, float y, float hscale, float vscale)
void TextureBlitAngled_f(uint32_t texNum, float x, float y, float angle, float pivotX, float pivotY)
void TextureBlitHorSheared_f(uint32_t texNum, float x, float y, float shearFactor, float originY)
void TextureBlitHorShearedByAngle_f(uint32_t texNum, float x, float y, float angle, float originY)
void TextureBlitVerSheared_f(uint32_t texNum, float x, float y, float shearFactor, float originX)
void TextureBlitVerShearedByAngle_f(uint32_t texNum, float x, float y, float angle, float originX)
void TextureBlitFlipped_f(uint32_t texNum, float x, float y, int flip)
void TextureBlitGeneral_f(uint32_t texNum, float x, float y, float hscale, float vscale, float angle, float pivotX, float pivotY, int flip)
void TextureBlitRegion_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh)
void TextureBlitRegionSized_f(uint32_t texNum, float x, float y, float w, float h, float rx, float ry, float rw, float rh)
void TextureBlitRegionScaled_f(uint32_t texNum, float x, float y, float hscale, float vscale, float rx, float ry, float rw, float rh)
void TextureBlitRegionAngled_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float angle, float pivotX, float pivotY)
void TextureBlitRegionHorSheared_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float shearFactor, float originY)
void TextureBlitRegionHorShearedByAngle_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float angle, float originY)
void TextureBlitRegionVerSheared_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float shearFactor, float originX)
void TextureBlitRegionVerShearedByAngle_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, float angle, float originX)
void TextureBlitRegionFlipped_f(uint32_t texNum, float x, float y, float rx, float ry, float rw, float rh, int flip)
void TextureBlitRegionGeneral_f(uint32_t texNum, float x, float y, float hscale, float vscale, float rx, float ry, float rw, float rh, float angle, float pivotX, float pivotY, int flip)
bool TextureReceivePixels(uint32_t texNum, void *pixels)
bool TextureReceivePixelsToPos(uint32_t texNum, void *pixels, int x, int y)

int PngFunctionSupported(const char *functionName)
void PngInit()
void *PngLoadSimple(const char *filename)
bool PngSaveSimple(const char *filename, void *pixels)

int TtfFunctionSupported(const char *functionName)
bool TtfInit(uint32_t dmSize, uint32_t reservedCount)
void TtfQuit()
uint32_t TtfLoad(const char *filename)
void TtfFree(uint32_t fontNum)
int TtfGetWidth(uint32_t fontNum)
int TtfGetHeight(uint32_t fontNum)
int, int TtfGetSizes(uint32_t fontNum)
bool TtfSetSizes(uint32_t fontNum, int width, int height)
int, int TtfGetGlyphSizes(uint32_t fontNum, uint32_t glyph)
int TtfGetGlyphWidth(uint32_t fontNum, uint32_t glyph)
int TtfGetGlyphHeight(uint32_t fontNum, uint32_t glyph)
void *TtfRenderGlyph(uint32_t fontNum, uint8_t r, uint8_t g, uint8_t b, uint32_t glyph)

int PrimitiveFunctionSupported(const char *functionName)
bool PrimitiveInit()
void PrimitiveFill_rgb(uint8_t r, uint8_t g, uint8_t b)
void PrimitiveFill_rgba(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveFill_c(uint32_t color)
void PrimitiveFill_ca(uint32_t color)
void PrimitivePixel_rgb_f(float x, float y, uint8_t r, uint8_t g, uint8_t b)
void PrimitivePixel_rgba_f(float x, float y, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitivePixel_c_f(float x, float y, uint32_t color)
void PrimitivePixel_ca_f(float x, float y, uint32_t color)
void PrimitiveLine_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveLine_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveLine_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveLine_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveArc_rgb_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveArc_rgba_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveArc_c_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveArc_ca_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveSegmentFilled_rgb_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveSegmentFilled_rgba_f(float x, float y, float radius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveSegmentFilled_c_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveSegmentFilled_ca_f(float x, float y, float radius, float startAngle, float endAngle, uint32_t color)
void PrimitiveCircle_rgb_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveCircle_rgba_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveCircle_c_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircle_ca_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircleFilled_rgb_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveCircleFilled_rgba_f(float x, float y, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveCircleFilled_c_f(float x, float y, float radius, uint32_t color)
void PrimitiveCircleFilled_ca_f(float x, float y, float radius, uint32_t color)
void PrimitiveEllipse_rgb_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveEllipse_rgba_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveEllipse_c_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipse_ca_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipseFilled_rgb_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveEllipseFilled_rgba_f(float x, float y, float rx, float ry, float angle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveEllipseFilled_c_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveEllipseFilled_ca_f(float x, float y, float rx, float ry, float angle, uint32_t color)
void PrimitiveRingSegment_rgb_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRingSegment_rgba_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRingSegment_c_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegment_ca_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegmentFilled_rgb_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRingSegmentFilled_rgba_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRingSegmentFilled_c_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveRingSegmentFilled_ca_f(float x, float y, float innerRadius, float outerRadius, float startAngle, float endAngle, uint32_t color)
void PrimitiveTriangle_rgb_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveTriangle_rgba_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveTriangle_c_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangle_ca_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangleFilled_rgb_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveTriangleFilled_rgba_f(float x1, float y1, float x2, float y2, float x3, float y3, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveTriangleFilled_c_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveTriangleFilled_ca_f(float x1, float y1, float x2, float y2, float x3, float y3, uint32_t color)
void PrimitiveRectangle_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRectangle_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRectangle_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangle_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangleFilled_rgb_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRectangleFilled_rgba_f(float x1, float y1, float x2, float y2, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRectangleFilled_c_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRectangleFilled_ca_f(float x1, float y1, float x2, float y2, uint32_t color)
void PrimitiveRoundedRectangle_rgb_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRoundedRectangle_rgba_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRoundedRectangle_c_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangle_ca_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangleFilled_rgb_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveRoundedRectangleFilled_rgba_f(float x1, float y1, float x2, float y2, float radius, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveRoundedRectangleFilled_c_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveRoundedRectangleFilled_ca_f(float x1, float y1, float x2, float y2, float radius, uint32_t color)
void PrimitiveLineBegin_f(float x, float y)
void PrimitiveLineTo_rgb_f(float x, float y, uint8_t r, uint8_t g, uint8_t b)
void PrimitiveLineTo_rgba_f(float x, float y, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void PrimitiveLineTo_c_f(float x, float y, uint32_t color)
void PrimitiveLineTo_ca_f(float x, float y, uint32_t color)
void PrimitiveLineEnd()

int AudioFunctionSupported(const char *functionName)
bool AudioInit(uint32_t sndDmSize, uint32_t sndReservedCount, uint32_t musDmSize, uint32_t musReservedCount, int freq, int channels, int chunkSize)
void AudioQuit()
uint32_t AudioSoundLoad(const char *filename)
uint32_t AudioMusicLoad(const char *filename)
void AudioSoundPlay(uint32_t soundNum)
void AudioSoundFadeInPlay(uint32_t soundNum, int ms)
void AudioSoundSetVolume(uint32_t soundNum, int volume)
void AudioSoundSetVolume_f(uint32_t soundNum, float volume)
void AudioSoundStop(uint32_t soundNum)
void AudioSoundFadeOutStop(uint32_t soundNum, int ms)
void AudioChannelsSetVolume(int volume)
void AudioChannelsSetVolume_f(float volume)
void AudioChannelsPause()
void AudioChannelsResume()
void AudioChannelsStop()
void AudioChannelsFadeOutStop(int ms)
bool AudioMusicPlaying(uint32_t musicNum)
bool AudioMusicFadingIn()
bool AudioMusicFadingOut()
void AudioMusicPlay(uint32_t musicNum, int loops)
void AudioMusicFadeInPlay(uint32_t musicNum, int ms)
void AudioMusicSetVolume(int volume)
void AudioMusicSetVolume_f(float volume)
void AudioMusicPause()
void AudioMusicResume()
void AudioMusicStop()
void AudioMusicFadeOutStop(int ms)
void AudioSoundFree(uint32_t soundNum)
void AudioMusicFree(uint32_t musicNum)

int KeyboardFunctionSupported(const char *functionName)
bool KeyboardInit()
void KeyboardRefresh()
bool KeyboardPress(int key)
bool KeyboardRelease(int key)
bool KeyboardPressed(int key)
int, int KeyboardArrowsGetAxes(int keyUp, int keyDown, int keyLeft, int keyRight)
int KeyboardArrowsGetAxis(int keyMin, int keyMax)
int KeyboardArrowsGetDirection(int keyUp, int keyDown, int keyLeft, int keyRight)
const char *KeyboardInputChar()

int MouseFunctionSupported(const char *functionName)
bool MouseInit()
void MouseRefresh()
bool MousePress(int button)
bool MouseRelease(int button)
bool MousePressed(int button)
int MouseGetWheelRelative()
bool MouseMoving()
int MouseGetX()
int MouseGetY()
int, int MouseGetXY()
int MouseGetDeltaX()
int MouseGetDeltaY()
int, int MouseGetDeltaXY()
void MouseCursorShow()
void MouseCursorHide()

int GameControllerFunctionSupported(const char *functionName)
bool GameControllerInit()
void GameControllerQuit()
void GameControllerRefresh()
bool GameControllerButtonPress(int controllerNum, int button)
bool GameControllerButtonRelease(int controllerNum, int button)
bool GameControllerButtonPressed(int controllerNum, int button)
int GameControllerGetAxis(int controllerNum, int axisNum)
float GameControllerGetAxis_f(int controllerNum, int axisNum)
int GameControllerGetAxisDelta(int controllerNum, int axisNum)
float GameControllerGetAxisDelta_f(int controllerNum, int axisNum)
int GameControllerGetTrackballDeltaX(int controllerNum, int trackballNum)
int GameControllerGetTrackballDeltaY(int controllerNum, int trackballNum)
int, int GameControllerGetTrackballDeltaXY(int controllerNum, int trackballNum)
int GameControllerGetPovHat(int controllerNum, int povHatNum)
int GameControllerGetPovHatHorizontal(int controllerNum, int povHatNum)
int GameControllerGetPovHatVertical(int controllerNum, int povHatNum)
int, int GameControllerGetPovHatAxes(int controllerNum, int povHatNum)
int GameControllerGetButtonsCount(int controllerNum)
int GameControllerGetAxesCount(int controllerNum)
int GameControllerGetTrackballsCount(int controllerNum)
int GameControllerGetPowHatsCount(int controllerNum)

int TimerFunctionSupported(const char *functionName)
bool TimerInit()
void TimerStart()
int TimerDelay(int ms)
int TimerDelayForFPS(int fps)
float TimerDelayForFPS_f(float fps)

int JsonFunctionSupported(const char *functionName)
bool JsonInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t JsonCreateObject()
uint32_t JsonCreateArray()
uint32_t JsonParseString(const char *string)
uint32_t JsonParseFile(const char *filename)
uint32_t JsonAddItemToObject(uint32_t object, const char *itemName, uint32_t item)
uint32_t JsonAddStringToObject(uint32_t object, const char *itemName, const char *string)
uint32_t JsonAddDoubleToObject(uint32_t object, const char *itemName, double num)
uint32_t JsonAddBoolToObject(uint32_t object, const char *itemName, bool value)
uint32_t JsonAddNullToObject(uint32_t object, const char *itemName)
uint32_t JsonAddItemToArray(uint32_t array, uint32_t item)
uint32_t JsonAddStringToArray(uint32_t array, const char *string)
uint32_t JsonAddDoubleToArray(uint32_t array, double num)
uint32_t JsonAddBoolToArray(uint32_t array, bool value)
uint32_t JsonAddNullToArray(uint32_t array)
uint32_t JsonGetObjectItem(uint32_t object, const char *item)
uint32_t JsonGetArrayItem(uint32_t array, int item)
char *JsonToString(uint32_t entity)
char *JsonToStringFormatted(uint32_t entity)
bool JsonToFile(uint32_t entity, const char *filename)
bool JsonToFileFormatted(uint32_t entity, const char *filename)
void JsonDelete(uint32_t entity)
void JsonDeleteItemFromObject(uint32_t object, const char *item)
void JsonDeleteItemFromArray(uint32_t array, int item)
void JsonDetachItemFromObject(uint32_t object, uint32_t item)
void JsonDetachItemFromArray(uint32_t array, uint32_t item)
bool JsonObjectHasItem(uint32_t object, const char *item)
int JsonLength(uint32_t entity)

int ColorFunctionSupported(const char *functionName)
uint32_t ColorRgbAssemble(uint8_t r, uint8_t g, uint8_t b)
uint32_t ColorRgbaAssemble(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
uint8_t, uint8_t, uint8_t ColorRgbSplit(uint32_t rgb)
uint8_t ColorRgbGetRed(uint32_t rgb)
uint8_t ColorRgbGetGreen(uint32_t rgb)
uint8_t ColorRgbGetBlue(uint32_t rgb)
uint32_t ColorRgbSetRed(uint32_t rgb, uint8_t r)
uint32_t ColorRgbSetGreen(uint32_t rgb, uint8_t g)
uint32_t ColorRgbSetBlue(uint32_t rgb, uint8_t b)
uint8_t, uint8_t, uint8_t, uint8_t ColorRgbaSplit(uint32_t rgba)
uint8_t ColorRgbaGetRed(uint32_t rgba)
uint8_t ColorRgbaGetGreen(uint32_t rgba)
uint8_t ColorRgbaGetBlue(uint32_t rgba)
uint8_t ColorRgbaGetAlpha(uint32_t rgba)
uint32_t ColorRgbaSetRed(uint32_t rgba, uint8_t r)
uint32_t ColorRgbaSetGreen(uint32_t rgba, uint8_t g)
uint32_t ColorRgbaSetBlue(uint32_t rgba, uint8_t b)
uint32_t ColorRgbaSetAlpha(uint32_t rgba, uint8_t a)
uint32_t ColorRgbToRgba(uint32_t rgb)
uint32_t ColorRgbaToRgb(uint32_t rgba)

int MathFunctionSupported(const char *functionName)
float Sin_f(float num)
double Sin_d(double num)
float SinFast_f(float num)
double SinFast_d(double num)
float Cos_f(float num)
double Cos_d(double num)
float CosFast_f(float num)
double CosFast_d(double num)
float Tan_f(float num)
double Tan_d(double num)
float TanFast_f(float num)
double TanFast_d(double num)
float Cot_f(float num)
double Cot_d(double num)
float CotFast_f(float num)
double CotFast_d(double num)
float Asin_f(float num)
double Asin_d(double num)
float AsinFast_f(float num)
double AsinFast_d(double num)
float Acos_f(float num)
double Acos_d(double num)
float AcosFast_f(float num)
double AcosFast_d(double num)
float Atan_f(float num)
double Atan_d(double num)
float AtanFast_f(float num)
double AtanFast_d(double num)
float Acot_f(float num)
double Acot_d(double num)
float AcotFast_f(float num)
double AcotFast_d(double num)
float Loge_f(float num)
double Loge_d(double num)
float LogeFast_f(float num)
double LogeFast_d(double num)
float Log10_f(float num)
double Log10_d(double num)
float Log10Fast_f(float num)
double Log10Fast_d(double num)
float Log2_f(float num)
double Log2_d(double num)
float Log2Fast_f(float num)
double Log2Fast_d(double num)
float Log_f(float num, float base)
double Log_d(double num, double base)
float LogFast_f(float num, float base)
double LogFast_d(double num, double base)
float Pow_f(float base, float power)
double Pow_d(double base, double power)
float PowFast_f(float base, float power)
double PowFast_d(double base, double power)
float Sqrt_f(float num)
double Sqrt_d(double num)
float SqrtFast_f(float num)
double SqrtFast_d(double num)
float Cbrt_f(float num)
double Cbrt_d(double num)
float CbrtFast_f(float num)
double CbrtFast_d(double num)
float Hypot_f(float x, float y)
double Hypot_d(double x, double y)
float HypotFast_f(float x, float y)
double HypotFast_d(double x, double y)
float Angle_f(float x, float y)
double Angle_d(double x, double y)
float AngleFast_f(float x, float y)
double AngleFast_d(double x, double y)
float Vecx_f(float length, float dir)
double Vecx_d(double length, double dir)
float VecxFast_f(float length, float dir)
double VecxFast_d(double length, double dir)
float Vecy_f(float length, float dir)
double Vecy_d(double length, double dir)
float VecyFast_f(float length, float dir)
double VecyFast_d(double length, double dir)
float, float Vecxy_f(float length, float dir)
double, double Vecxy_d(double length, double dir)
float, float VecxyFast_f(float length, float dir)
double, double VecxyFast_d(double length, double dir)
int Rand(int value)
int RandRange(int min, int max)
void RandSeed(unsigned int seed)
void RandSeedByTime()
int Abs(int num)
long int Abs_l(long int num)
long long int Abs_ll(long long int num)
float Abs_f(float num)
double Abs_d(double num)
int Sign(int num)
long int Sign_l(long int num)
long long int Sign_ll(long long int num)
float Sign_f(float num)
double Sign_d(double num)
float Round_f(float num)
double Round_d(double num)
float Floor_f(float num)
double Floor_d(double num)
float Ceil_f(float num)
double Ceil_d(double num)
int Mod(int num, int denom)
long int Mod_l(long int num, long int denom)
long long int Mod_ll(long long int num, long long int denom)
float Mod_f(float num, float denom)
double Mod_d(double num, double denom)
int Min(int num1, int num2)
long int Min_l(long int num1, long int num2)
long long int Min_ll(long long int num1, long long int num2)
float Min_f(float num1, float num2)
double Min_d(double num1, double num2)
int Max(int num1, int num2)
long int Max_l(long int num1, long int num2)
long long int Max_ll(long long int num1, long long int num2)
float Max_f(float num1, float num2)
double Max_d(double num1, double num2)

int SpriteFunctionSupported(const char *functionName)
bool SpriteInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t SpriteLoad(const char *filename, int clipWidth, int clipHeight, int rowsCount, int colsCount, int clipsCount, int anchorX, int anchorY)
uint32_t SpriteLoadSimple(const char *filename, int anchorX, int anchorY)
uint32_t SpriteLoadAtlas(const char *filename, int clipsCount)
uint32_t SpriteCreateFromTexture(const char *name, uint32_t texNum, int clipsCount)
bool SpriteSetAtlasFrame(uint32_t sprNum, int clipNum, int x1, int y1, int x2, int y2, int anchorX, int anchorY)
int SpriteGetFramesCount(uint32_t sprNum)
int, int SpriteGetFrameSizes(uint32_t sprNum, int clipNum)
int SpriteGetFrameWidth(uint32_t sprNum, int clipNum)
int SpriteGetFrameHeight(uint32_t sprNum, int clipNum)
int, int SpriteGetFrameCoords(uint32_t sprNum, int clipNum)
int SpriteGetFrameX(uint32_t sprNum, int clipNum)
int SpriteGetFrameY(uint32_t sprNum, int clipNum)
int, int SpriteGetFrameAnchors(uint32_t sprNum, int clipNum)
int SpriteGetFrameAnchorX(uint32_t sprNum, int clipNum)
int SpriteGetFrameAnchorY(uint32_t sprNum, int clipNum)
uint32_t SpriteGetTexture(uint32_t sprNum)
void SpriteFree(uint32_t sprNum)
void SpriteDetachTexture(uint32_t sprNum)
void SpriteSetModulation_c(uint32_t sprNum, uint32_t color)
void SpriteSetModulation_ca(uint32_t sprNum, uint32_t color)
void SpriteSetModulation_rgb(uint32_t sprNum, uint8_t r, uint8_t g, uint8_t b)
void SpriteSetModulation_rgba(uint32_t sprNum, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void SpriteSetModulationAlpha(uint32_t sprNum, uint8_t alpha)
void SpriteSetModulationAlpha_f(uint32_t sprNum, float alpha)
void SpriteDraw_f(uint32_t sprNum, int clipNum, float x, float y)
void SpriteDrawSized_f(uint32_t sprNum, int clipNum, float x, float y, float w, float h)
void SpriteDrawScaled_f(uint32_t sprNum, int clipNum, float x, float y, float hscale, float vscale)
void SpriteDrawAngled_f(uint32_t sprNum, int clipNum, float x, float y, float angle)
void SpriteDrawFlipped_f(uint32_t sprNum, int clipNum, float x, float y, int flip)
void SpriteDrawGeneral_f(uint32_t sprNum, int clipNum, float x, float y, float hscale, float vscale, float angle, int flip)

int AnimatedSpriteFunctionSupported(const char *functionName)
bool AnimatedSpriteInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t AnimatedSpriteCreateFromSprite(uint32_t spriteNum, float animSpeed, float hscale, float vscale, float currentFrame)
uint32_t AnimatedSpriteCreate(void)
bool AnimatedSpriteSetSprite(uint32_t animatedSpriteNum, uint32_t spriteNum)
bool AnimatedSpriteSetAnimSpeed(uint32_t animatedSpriteNum, float animSpeed)
bool AnimatedSpriteSetScale(uint32_t animatedSpriteNum, float hscale, float vscale)
bool AnimatedSpriteSetCurrentFrame(uint32_t animatedSpriteNum, float currentFrame)
void AnimatedSpriteFree(uint32_t animatedSpriteNum)
void AnimatedSpriteDetachSprite(uint32_t animatedSpriteNum)
void AnimatedSpriteDraw_f(uint32_t animatedSpriteNum, float x, float y)
void AnimatedSpriteDrawAngled_f(uint32_t animatedSpriteNum, float x, float y, float angle)
void AnimatedSpriteDrawFlipped_f(uint32_t animatedSpriteNum, float x, float y, int flip)
void AnimatedSpriteDrawGeneral_f(uint32_t animatedSpriteNum, float x, float y, float angle, int flip)
void AnimatedSpriteUpdate_f(uint32_t animatedSpriteNum)

int FontFunctionSupported(const char *functionName)
bool FontInit(uint32_t dmSize, uint32_t reservedCount)
uint32_t FontCreate(const char *name, int reservedAtlases)
bool FontAddAtlas(uint32_t fontNum, uint32_t sprNum, int atlasNum)
uint32_t FontCacheTtf(const char *name, uint32_t ttfNum, unsigned int reservedAtlases)
void FontFree(uint32_t fontNum)
void FontDeleteAtlas(uint32_t fontNum, int atlasNum)
void FontDeleteAllAtlases(uint32_t fontNum)
void FontDetachAtlas(uint32_t fontNum, int atlasNum)
void FontDetachAllAtlases(uint32_t fontNum)
uint32_t FontGetAtlasSprite(uint32_t fontNum, int atlasNum)
int FontGetAtlasesCount(uint32_t fontNum)
bool FontDrawString_f(uint32_t fontNum, float x, float y, const char *string)
int FontGetHeight(uint32_t fontNum)
int FontGetStringWidth(uint32_t fontNum, const char *string)
const char *FontGetName(uint32_t fontNum)

int GuiFunctionSupported(const char *functionName)
bool GuiInit(uint32_t fontDmSize, uint32_t fontReservedCount, uint32_t imageDmSize, uint32_t imageReservedCount, uint32_t fontnum)
void GuiQuit()
void GuiProcessEvents()
void GuiRender()
uint32_t GuiAddFont(uint32_t fontnum)
uint32_t GuiAddImage(uint32_t texnum, int x, int y, int w, int h)
void GuiDeleteFont(uint32_t fontnum)
void GuiDeleteImage(uint32_t imagenum)
bool GuiBegin(const char *title, float boundsX, float boundsY, float boundsW, float boundsH, int flags)
void GuiEnd()
bool GuiButtonText(const char *title, int len)
bool GuiButtonLabel(const char *title)
bool GuiButtonColor_c(uint32_t color)
bool GuiButtonColor_ca(uint32_t color)
bool GuiButtonColor_rgb(uint8_t r, uint8_t g, uint8_t b)
bool GuiButtonColor_rgba(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
bool GuiButtonSymbol(int symbol)
bool GuiButtonSymbolLabel(int symbol, const char *string, int alignment)
bool GuiButtonSymbolText(int symbol, const char *string, int len, int alignment)
bool GuiButtonImage(uint32_t imagenum)
bool GuiButtonImageLabel(uint32_t imagenum, const char *string, int alignment)
bool GuiButtonImageText(uint32_t imagenum, const char *string, int len, int alignment)
bool GuiCheckLabel(const char *label, bool active)
bool GuiCheckText(const char *text, int len, bool active)
bool GuiSelectableLabel(const char *text, int alignment, bool selected)
bool GuiSelectableText(const char *text, int len, int alignment, bool selected)
bool GuiSelectableImageLabel(uint32_t imagenum, const char *text, int alignment, bool selected)
bool GuiSelectableImageText(uint32_t imagenum, const char *text, int len, int alignment, bool selected)
void GuiEditText(uint32_t sbnum)
void GuiEditInteger(uint32_t sbnum)
void GuiEditFloat(uint32_t sbnum)
void GuiLabel(const char *string, int alignment)
void GuiLabelColored_c(const char *string, int alignment, uint32_t color)
void GuiLabelColored_ca(const char *string, int alignment, uint32_t color)
void GuiLabelColored_rgb(const char *string, int alignment, uint8_t r, uint8_t g, uint8_t b)
void GuiLabelColored_rgba(const char *string, int alignment, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
void GuiLabelWrap(const char *string)
void GuiLabelColoredWrap_c(const char *string, uint32_t color)
void GuiLabelColoredWrap_ca(const char *string, uint32_t color)
void GuiLabelColoredWrap_rgb(const char *string, uint8_t r, uint8_t g, uint8_t b)
void GuiLabelColoredWrap_rgba(const char *string, uint8_t r, uint8_t g, uint8_t b, uint8_t a)
bool GuiTreeTabBegin(const char *title, bool maximized)
void GuiTreeTabEnd(void)
void GuiLayoutRowDynamic(float height, int cols)
void GuiLayoutRowStatic(float height, int cols, int itemWidth)
bool GuiGroupBegin(const char *title, int flags)
void GuiGroupEnd()
void GuiSpacing(int cols)
